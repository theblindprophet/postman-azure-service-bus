{
	"info": {
		"_postman_id": "6e2052fc-e4ad-4342-8fce-3bb0517745a7",
		"name": "Azure Portal - Service Bus Queues - Monitor",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Refresh Token From Device Code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", pm.response.json().access_token);",
									"postman.setNextRequest(\"Get Queue Message - Deadletter\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "refresh_token",
									"type": "text"
								},
								{
									"key": "refresh_token",
									"value": "{{refresh_token}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "https://management.azure.com/user_impersonation offline_access",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/common/oauth2/v2.0/token",
							"host": [
								"{{url}}"
							],
							"path": [
								"common",
								"oauth2",
								"v2.0",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Service Bus Queues",
			"item": [
				{
					"name": "Get Queue Message - Deadletter",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var uri = 'https://' + pm.environment.get('service_bus_namespace_name') + '.servicebus.windows.net/' + pm.environment.get('queue_name');",
									"var encoded = encodeURIComponent(uri); ",
									"var now = new Date(); ",
									"var week = 60*60*24*7;",
									"var ttl = Math.round(now.getTime() / 1000) + week;",
									"var signature = encoded + '\\n' + ttl;",
									"var signatureUTF8 = signature.toString(\"utf8\");",
									"var hash = CryptoJS.HmacSHA256(signatureUTF8, pm.environment.get('service_bus_sas_key'));",
									"var hash64 = hash.toString(CryptoJS.enc.Base64);",
									"var sas = 'SharedAccessSignature sr=' + encoded + '&sig=' + encodeURIComponent(hash64) + '&se=' + ttl + '&skn=' + 'MyPolicy';",
									"pm.environment.set('service_bus_sas_full_signature', sas);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const code = pm.response.code;",
									"",
									"if (code === 204) {",
									"    return;",
									"}",
									"",
									"pm.test(\"Deadletter test\", function () {",
									"    pm.expect()",
									"    if (code !== 200) {",
									"        pm.expect.fail(`Unexpected error code, ${code}`);",
									"    }",
									"",
									"    const deadLetterReason = pm.response.headers.get(\"DeadLetterReason\");",
									"    const deadLetterErrorDescription = pm.response.headers.get(\"DeadLetterErrorDescription\");",
									"    const brokerProperties = pm.response.headers.get(\"BrokerProperties\");",
									"    pm.expect.fail(`Message was dead-lettered | DeadLetterReason: ${deadLetterReason} | DeadLetterErrorDescription: ${deadLetterErrorDescription} | Broker Properties: ${brokerProperties}`);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{service_bus_sas_full_signature}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"url": {
							"raw": "https://{{service_bus_namespace_name}}.servicebus.windows.net/{{queue_name}}/$deadletterqueue/messages/head",
							"protocol": "https",
							"host": [
								"{{service_bus_namespace_name}}",
								"servicebus",
								"windows",
								"net"
							],
							"path": [
								"{{queue_name}}",
								"$deadletterqueue",
								"messages",
								"head"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://login.microsoftonline.com"
		}
	]
}